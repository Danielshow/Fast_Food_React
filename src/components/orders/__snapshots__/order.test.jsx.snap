// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`## Order comfirmation component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderConfirmation
    orderFood={[MockFunction]}
    removeModal={[Function]}
    total={40}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="orderwidth"
      >
        <Toast
          warning="Some fields are invalid"
        />
        <h1
          className="close"
          onClick={[Function]}
        >
           x 
        </h1>
        <h3>
          Order Details
        </h3>
        <h3>
          Total:  
          40
        </h3>
        <form
          className="orderDetailsContainer"
          onSubmit={[Function]}
        >
          <div
            className="input-field"
          >
            <label
              htmlFor="address"
            >
              Address
            </label>
            <br />
            <input
              className="inValid"
              id="address"
              onChange={[Function]}
              required={true}
              type="text"
              value="ddj"
            />
          </div>
          <div
            className="input-field"
          >
            <label
              htmlFor="phonenumber"
            >
              Phone Number
            </label>
            <br />
            <input
              className="inValid"
              id="phonenumber"
              onChange={[Function]}
              required={true}
              type="text"
              value="dkdjdj"
            />
          </div>
          <p
            className="errorMessage"
          >
            yeah
          </p>
          <button
            type="submit"
          >
             Order 
          </button>
        </form>
        <p>
           Thanks for patronizing us
        </p>
      </div>,
      "className": "orderdetails",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Toast
            warning="Some fields are invalid"
          />,
          <h1
            className="close"
            onClick={[Function]}
          >
             x 
          </h1>,
          <h3>
            Order Details
          </h3>,
          <h3>
            Total:  
            40
          </h3>,
          <form
            className="orderDetailsContainer"
            onSubmit={[Function]}
          >
            <div
              className="input-field"
            >
              <label
                htmlFor="address"
              >
                Address
              </label>
              <br />
              <input
                className="inValid"
                id="address"
                onChange={[Function]}
                required={true}
                type="text"
                value="ddj"
              />
            </div>
            <div
              className="input-field"
            >
              <label
                htmlFor="phonenumber"
              >
                Phone Number
              </label>
              <br />
              <input
                className="inValid"
                id="phonenumber"
                onChange={[Function]}
                required={true}
                type="text"
                value="dkdjdj"
              />
            </div>
            <p
              className="errorMessage"
            >
              yeah
            </p>
            <button
              type="submit"
            >
               Order 
            </button>
          </form>,
          <p>
             Thanks for patronizing us
          </p>,
        ],
        "className": "orderwidth",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "warning": "Some fields are invalid",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " x ",
            "className": "close",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": " x ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Order Details",
          },
          "ref": null,
          "rendered": "Order Details",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Total:  ",
              40,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Total:  ",
            40,
          ],
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="input-field"
              >
                <label
                  htmlFor="address"
                >
                  Address
                </label>
                <br />
                <input
                  className="inValid"
                  id="address"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="ddj"
                />
              </div>,
              <div
                className="input-field"
              >
                <label
                  htmlFor="phonenumber"
                >
                  Phone Number
                </label>
                <br />
                <input
                  className="inValid"
                  id="phonenumber"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="dkdjdj"
                />
              </div>,
              <p
                className="errorMessage"
              >
                yeah
              </p>,
              <button
                type="submit"
              >
                 Order 
              </button>,
            ],
            "className": "orderDetailsContainer",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="address"
                  >
                    Address
                  </label>,
                  <br />,
                  <input
                    className="inValid"
                    id="address"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="ddj"
                  />,
                ],
                "className": "input-field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Address",
                    "htmlFor": "address",
                  },
                  "ref": null,
                  "rendered": "Address",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "inValid",
                    "id": "address",
                    "onChange": [Function],
                    "required": true,
                    "type": "text",
                    "value": "ddj",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="phonenumber"
                  >
                    Phone Number
                  </label>,
                  <br />,
                  <input
                    className="inValid"
                    id="phonenumber"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="dkdjdj"
                  />,
                ],
                "className": "input-field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Phone Number",
                    "htmlFor": "phonenumber",
                  },
                  "ref": null,
                  "rendered": "Phone Number",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "inValid",
                    "id": "phonenumber",
                    "onChange": [Function],
                    "required": true,
                    "type": "text",
                    "value": "dkdjdj",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "yeah",
                "className": "errorMessage",
              },
              "ref": null,
              "rendered": "yeah",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Order ",
                "type": "submit",
              },
              "ref": null,
              "rendered": " Order ",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Thanks for patronizing us",
          },
          "ref": null,
          "rendered": " Thanks for patronizing us",
          "type": "p",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="orderwidth"
        >
          <Toast
            warning="Some fields are invalid"
          />
          <h1
            className="close"
            onClick={[Function]}
          >
             x 
          </h1>
          <h3>
            Order Details
          </h3>
          <h3>
            Total:  
            40
          </h3>
          <form
            className="orderDetailsContainer"
            onSubmit={[Function]}
          >
            <div
              className="input-field"
            >
              <label
                htmlFor="address"
              >
                Address
              </label>
              <br />
              <input
                className="inValid"
                id="address"
                onChange={[Function]}
                required={true}
                type="text"
                value="ddj"
              />
            </div>
            <div
              className="input-field"
            >
              <label
                htmlFor="phonenumber"
              >
                Phone Number
              </label>
              <br />
              <input
                className="inValid"
                id="phonenumber"
                onChange={[Function]}
                required={true}
                type="text"
                value="dkdjdj"
              />
            </div>
            <p
              className="errorMessage"
            >
              yeah
            </p>
            <button
              type="submit"
            >
               Order 
            </button>
          </form>
          <p>
             Thanks for patronizing us
          </p>
        </div>,
        "className": "orderdetails",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Toast
              warning="Some fields are invalid"
            />,
            <h1
              className="close"
              onClick={[Function]}
            >
               x 
            </h1>,
            <h3>
              Order Details
            </h3>,
            <h3>
              Total:  
              40
            </h3>,
            <form
              className="orderDetailsContainer"
              onSubmit={[Function]}
            >
              <div
                className="input-field"
              >
                <label
                  htmlFor="address"
                >
                  Address
                </label>
                <br />
                <input
                  className="inValid"
                  id="address"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="ddj"
                />
              </div>
              <div
                className="input-field"
              >
                <label
                  htmlFor="phonenumber"
                >
                  Phone Number
                </label>
                <br />
                <input
                  className="inValid"
                  id="phonenumber"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="dkdjdj"
                />
              </div>
              <p
                className="errorMessage"
              >
                yeah
              </p>
              <button
                type="submit"
              >
                 Order 
              </button>
            </form>,
            <p>
               Thanks for patronizing us
            </p>,
          ],
          "className": "orderwidth",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "warning": "Some fields are invalid",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " x ",
              "className": "close",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": " x ",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Order Details",
            },
            "ref": null,
            "rendered": "Order Details",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Total:  ",
                40,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Total:  ",
              40,
            ],
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="input-field"
                >
                  <label
                    htmlFor="address"
                  >
                    Address
                  </label>
                  <br />
                  <input
                    className="inValid"
                    id="address"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="ddj"
                  />
                </div>,
                <div
                  className="input-field"
                >
                  <label
                    htmlFor="phonenumber"
                  >
                    Phone Number
                  </label>
                  <br />
                  <input
                    className="inValid"
                    id="phonenumber"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="dkdjdj"
                  />
                </div>,
                <p
                  className="errorMessage"
                >
                  yeah
                </p>,
                <button
                  type="submit"
                >
                   Order 
                </button>,
              ],
              "className": "orderDetailsContainer",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="address"
                    >
                      Address
                    </label>,
                    <br />,
                    <input
                      className="inValid"
                      id="address"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="ddj"
                    />,
                  ],
                  "className": "input-field",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Address",
                      "htmlFor": "address",
                    },
                    "ref": null,
                    "rendered": "Address",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "inValid",
                      "id": "address",
                      "onChange": [Function],
                      "required": true,
                      "type": "text",
                      "value": "ddj",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="phonenumber"
                    >
                      Phone Number
                    </label>,
                    <br />,
                    <input
                      className="inValid"
                      id="phonenumber"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="dkdjdj"
                    />,
                  ],
                  "className": "input-field",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Phone Number",
                      "htmlFor": "phonenumber",
                    },
                    "ref": null,
                    "rendered": "Phone Number",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "inValid",
                      "id": "phonenumber",
                      "onChange": [Function],
                      "required": true,
                      "type": "text",
                      "value": "dkdjdj",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "yeah",
                  "className": "errorMessage",
                },
                "ref": null,
                "rendered": "yeah",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Order ",
                  "type": "submit",
                },
                "ref": null,
                "rendered": " Order ",
                "type": "button",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Thanks for patronizing us",
            },
            "ref": null,
            "rendered": " Thanks for patronizing us",
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
